@model Main.Post

@{
    ViewBag.Title = "View Post";
}




<script type="text/javascript" src='http://maps.google.com/maps/api/js?sensor=false&libraries=places'></script>
<script src="~/Scripts/locationpicker.jquery.js"></script>

<script>
    $(document).ready(function () {
        $('#map').locationpicker({
            @if (Model.Longitude.HasValue && Model.Latitude.HasValue) {
                <text>
                    location: {
                        longitude: @Model.Longitude,
                        latitude: @Model.Latitude
                    },
                </text>
            }
            radius: 2500,
            zoom: 11,
            inputBinding: {
                latitudeInput: $('#Latitude'),
                longitudeInput: $('#Longitude'),
                locationNameInput: $('#locationSearch')
            },
            draggable: false,
            enableAutocomplete: false
        });
    });
</script>

@{
    if (Model.Removed) {
        <text>
            <h4>This Post has already been accepted</h4>
        </text>
    }
}

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.PostDate)
        </dt>

        <dd>
            <abbr class="timeago" title="@Html.DisplayFor(model => model.PostDate)">@Html.DisplayFor(model => model.PostDate)</abbr>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            <div class="descriptionView">
                @Html.Raw(Model.Description)
            </div>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ViewCount)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ViewCount)
        </dd>

        <dt>
            User
        </dt>

        <dd>

            <a class="avatarLink" href="/Manage/ViewUser?user=@Html.DisplayFor(modelItem => modelItem.UserID)">
                <img width="64" height="64" alt="User Avatar Picture"
                     src="@Html.DisplayFor(model => model.AspNetUser.Avatar)" />
            </a>

            @Html.DisplayFor(model => model.AspNetUser.Email.Split('@')[0])
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Category.CategoryName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Category.CategoryName)
        </dd>
    </dl>
    <div class="form-group">
        <div class="col-md-12 pull-center">
            @if (!Model.Removed) {
                @Html.ActionLink("Accept Posting", "Accept", new { id = Model.PostID },
                    new { @class = "btn btn-success", @style = "clear:both;display:inline-block;" }
                )
            }
        </div>
    </div>
</div>


<div id="mapWrapper">
    <input disabled="disabled" class="form-control" type="text" id="locationSearch" />
    <div id="map"></div>
</div>


<style type="text/css">
    #imageUploadWrapper, #imageUploadInner {
        height: 210px;
    }
</style>

<div class="form-group">
    <div class="col-md-12" style="padding:0;">
        <div id="imageUploadWrapper">
            <div id="imageUploadInner">
                @{
                    int itemCount2 = 0;
                    foreach (var item in ViewData["images"] as List<Main.Image>)
                    {
                        itemCount2 = itemCount2 + 1;
                        <div class="img">
                            <a href="@item.Source">
                                <img width="256" height="256" alt="Posting Image"
                                     src="@item.Source" />
                            </a>
                        </div>
                    }

                    if (itemCount2 == 0)
                    {
                        <h2>No images were uploaded</h2>
                    }
                }

            </div>
        </div>
    </div>
</div>


<div class="clearfix"></div>

<br />


<hr />
<h4>Comments</h4>

<table class="table" style="border-bottom:1px solid #ddd">
    <tr>
        <th>
            User
        </th>
        <th></th>
        <th>
            Date
        </th>
        <th>
            Comment
        </th>
        <th></th>
    </tr>
    @{
        int itemCount = 0;
        foreach (var item in ViewData["comments"] as List<Main.Comment>)
        {
            itemCount = itemCount + 1;
            <tr>
                <td>
                    <a class="avatarLink" href="/Manage/ViewUser?user=@Html.DisplayFor(modelItem => item.UserID)">
                        <img width="64" height="64" alt="User Avatar Picture"
                                src="@item.AspNetUser.Avatar" />
                    </a>
                </td>
                <td>
                    @item.AspNetUser.Email.Split('@')[0]
                </td>
                <td>
                    <abbr class="timeago" title="@item.CommentDate">@item.CommentDate</abbr>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CommentDescription)
                </td>

                <td>
                    @if (String.Equals(item.AspNetUser.UserName, ViewBag.UserID))
                    {
                        @Html.ActionLink("Delete", "Delete", "Comments", new { id = item.CommentID }, new { @class = "btn btn-danger pull-right" })
                    }
                </td>
            </tr>
        }

        if (itemCount == 0)
        {
            <tr>
                <td colspan="5" style="text-align:center;">
                    No comments yet, add one below.
                </td>
            </tr>
        }
    }
</table>


@using (Html.BeginForm("Create", "Comments", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.PostID)

        <div class="form-group">
            <label for="CommentDescription" class="control-label col-md-12">Add New Comment:</label>
            <div class="col-md-12">
                <textarea style="width:100%;max-width:100%;" class="form-control" id="CommentDescription" name="CommentDescription"></textarea>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Create Comment" class="btn btn-success pull-right" />
            </div>
        </div>
    </div>
}





<div class="form-actions no-color">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })

    @if (Model.AspNetUser.Email == User.Identity.Name)
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.PostID }, new { @class = "btn btn-warning pull-right" })
    }
</div>
