@model Main.Post

@{
    ViewBag.Title = "Create Post";
}


<script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
<script type="text/javascript" src='http://maps.google.com/maps/api/js?sensor=false&libraries=places'></script>
<script src="~/Scripts/locationpicker.jquery.js"></script>
<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash.js"></script>
<script type="text/javascript" src="~/Scripts/quill.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/Content/quill.snow.css">
<script type="text/javascript">
    $(document).ready(function () {
        $('#map').locationpicker({
            radius: 2500,
            zoom: 11,
            inputBinding: {
                latitudeInput: $('#Latitude'),
                longitudeInput: $('#Longitude'),
                locationNameInput: $('#locationSearch')
            },
            enableAutocomplete: true
        });
    });
</script>


<br /><br />

<div id="dropZone">
    <div><div>Drop Files Here to Add Them</div></div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })


                <div id="content-container">
                    <div class="advanced-wrapper">
                        <div class="toolbar-container">
                            <span class="ql-format-group">
                                <select title="Size" class="ql-size">
                                    <option value="14px" selected>Normal</option>
                                    <option value="18px">Large</option>
                                    <option value="32px">Huge</option>
                                </select>
                            </span>
                            <span class="ql-format-group">
                                <span class="ql-format-separator"></span>
                                <span title="Bold" class="ql-format-button ql-bold"></span>

                                <span class="ql-format-separator"></span>
                                <span title="Italic" class="ql-format-button ql-italic"></span>

                                <span class="ql-format-separator"></span>
                                <span title="Underline" class="ql-format-button ql-underline"></span>

                                <span class="ql-format-separator"></span>
                                <select title="Text Alignment" class="ql-align">
                                    <option value="left" selected></option>
                                    <option value="center"></option>
                                    <option value="right"></option>
                                    <option value="justify"></option>
                                </select>

                                <span class="ql-format-separator"></span>
                                <span title="List" class="ql-format-button ql-list"></span>
                            </span>
                        </div>
                        <div class="editor-container"></div>
                    </div>
                </div>


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2" for="locationSearch">Location</label>
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                <div id="mapWrapper">
                    <input class="form-control" type="text" id="locationSearch" />
                    <div id="map"></div>
                </div>
                @Html.HiddenFor(model => model.Latitude)
                @Html.HiddenFor(model => model.Longitude)
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Images</label>
            <div class="col-md-10">
                <div id="imageUploadWrapper">
                    <div id="imageUploadInner" style="background:url('/img/images.png') #fff no-repeat center;width:100%;"></div>
                </div>
            </div>
        </div>


        <div class="form-actions no-color">
            <input type="submit" value="Create" class="btn btn-success pull-right" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
