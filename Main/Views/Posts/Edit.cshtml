@model Main.Post

@{
    ViewBag.Title = "Edit";
}


<script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
<script type="text/javascript" src='http://maps.google.com/maps/api/js?sensor=false&libraries=places'></script>
<script src="~/Scripts/locationpicker.jquery.js"></script>
<script src="~/Scripts/timeago.jquery.js"></script>

<script>
    $(document).ready(function () {
        $("abbr.timeago").timeago();

        $('#map').locationpicker({
            @if (Model.Longitude.HasValue && Model.Latitude.HasValue) {
                <text>
                    location: {
                        longitude: @Model.Longitude,
                        latitude: @Model.Latitude
                    },
                </text>
            }
            radius: 2500,
            zoom: 11,
            inputBinding: {
                latitudeInput: $('#Latitude'),
                longitudeInput: $('#Longitude'),
                locationNameInput: $('#locationSearch')
            },
            enableAutocomplete: true
        });
    });
</script>



<h2>Edit</h2>

@Html.ActionLink("Delete", "Delete", new { id = Model.PostID })

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PostID)


        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Removed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Removed)
                    @Html.ValidationMessageFor(model => model.Removed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
        <div id="mapWrapper">
            <input class="form-control" type="text" id="locationSearch" />
            <div id="map"></div>
        </div>
        @Html.HiddenFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
